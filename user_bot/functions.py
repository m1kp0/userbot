import datetime, random, os
from asyncio import sleep
from telethon import *
import client.client as cl

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
saved_msgs = []

# "–ì–ª–æ–±–∞–ª—å–Ω—ã–µ" —Ñ—É–Ω–∫—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –∫–æ–º–∞–Ω–¥–∞—Ö –±–æ—Ç–∞
async def edit_msg(msg, text, sleep_time):
    await msg.edit(text)
    await sleep(sleep_time)

async def send_msg(bot, chat_id, text):
    await bot.send_message(chat_id, text)

async def delete_msg(msg):
    await msg.delete()

async def error(msg, text):
    await edit_msg(msg, text, 0)
    await sleep(2)
    await delete_msg(msg)

# –ö–æ–º–∞–Ω–¥—ã
async def delete_msg_command(msg):    
    text = msg.text
    if text == ".-":
        if msg.is_reply:
            await delete_msg(await msg.get_reply_message()) # —ç—Ç–æ –∏–∑–º–µ–Ω–∏–ª
            await delete_msg(msg)
        else:
            await error(msg, "–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!")

async def like_command(msg):
    if msg.text == ".–ª–∞–π–∫":
        await edit_msg(msg, "üëç", 0)

async def dislike_command(msg):
    if msg.text == ".–¥–∏–∑":
        await edit_msg(msg, "üëé", 0)

async def sms_command(msg):
    text = msg.text.split(" ", maxsplit=2)
    if text[0] == ".—Å–º—Å":
        try:
            if msg.is_reply:
                text_to_sms = await msg.get_reply_message().text
            else:
                text_to_sms = text[2]
            
            await edit_msg(msg, "–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è..", 0)
            for i in range(int(text[1])):
                await send_msg(cl.m1kp, msg.chat_id, text_to_sms)
                await sleep(0.1)
            
            await delete_msg(msg)
        except:
            await error(msg, "–û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏\n[.—Å–º—Å (–∫–æ–ª-–≤–æ —Å–º—Å) (—Å–º—Å)]")

async def save_command(msg):
    text = msg.text.split(" ", maxsplit=1)
    if text[0] == ".—Å–µ–π–≤":
        if msg.is_reply:
            saved_msgs.append(await msg.get_reply_message().text)
            await edit_msg(msg, "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ", 0)
        else:
            try:
                saved_msgs.append(text[1])
                await edit_msg(msg, f"–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ: {text[1]}", 0)
            except:
                await error(msg, "–û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏\n[.—Å–µ–π–≤ (—Ç–µ–∫—Å—Ç/–æ—Ç–≤–µ—Ç)]")

async def delete_save_command(msg):
    text = msg.text.split(" ", maxsplit=1)
    if text[0] == (".—É–¥–∞–ª–∏—Ç—å_—Å–µ–π–≤" or ".—É—Å"):
        if msg.is_reply:
            reply_text = msg.get_reply_message().text
            if saved_msgs and reply_text in saved_msgs:
                saved_msgs.remove(reply_text)
                await edit_msg(msg, "–£–¥–∞–ª–µ–Ω–æ –∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö", 0)
            else:
                await edit_msg(msg, f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö", 0)
        else:
            try:
                if saved_msgs and text[1] in saved_msgs:
                    saved_msgs.remove(text[1])
                    await edit_msg(msg, f"–£–¥–∞–ª–µ–Ω–æ –∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö: {text[1]}", 0)
                else:
                    await edit_msg(msg, f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö: {text[1]}", 0)
            except:
                error(msg, "–û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏\n[.—É–¥–∞–ª–∏—Ç—å_—Å–µ–π–≤ (—Ç–µ–∫—Å—Ç/–æ—Ç–≤–µ—Ç)]")

async def clear_saves_command(msg):
    if msg.text == (".–æ—á–∏—Å—Ç–∏—Ç—å_—Å–µ–π–≤—ã" or ".–æ—Å"):
        if saved_msgs: 
            saved_msgs.clear()
            await edit_msg(msg, "–£–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", 0)
        else: 
            await error(msg, "–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π")

async def view_saves_command(msg):
    if msg.text == ".—Å–µ–π–≤—ã":
        if saved_msgs:
            await edit_msg(msg, "–°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", 0)
            for i in saved_msgs:
                await send_msg(cl.m1kp, msg.chat_id, i)
        else:
            await error(msg, "–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π")

async def time_now_command(msg):
    if msg.text == ".–≤—Ä–µ–º—è":
        time_now = datetime.datetime.now().strftime("%H:%M:%S")
        await edit_msg(msg, f"–í—Ä–µ–º—è —Å–µ–π—á–∞—Å: {time_now}", 0)

async def random_percent_command(msg):
    text = msg.text.split(" ", maxsplit=1)
    if text[0] == ".–ø—Ä–æ—Ü–µ–Ω—Ç":
        reply_text = await msg.get_reply_message()
        await edit_msg(msg, "–î—É–º–∞—é..", 0)
        await sleep(random.randint(1, 3))
        try:
            if msg.is_reply: 
                await edit_msg(msg, f"–î—É–º–∞—é, {reply_text} –Ω–∞ {random.randint(0, 100)}%", 0)
            else: await edit_msg(msg, f"–î—É–º–∞—é, {text[1]} –Ω–∞ {random.randint(0, 100)}%", 0)
        except:
            await error(msg, "–û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏\n[.–ø—Ä–æ—Ü–µ–Ω—Ç (—Ç–µ–∫—Å—Ç/–æ—Ç–≤–µ—Ç)]")


async def random_chance_command(msg):
    text = msg.text.split(" ", maxsplit=1)
    if text[0] == ".—à–∞–Ω—Å":
        reply_text = await msg.get_reply_message()
        chance = random.randint(0, 100)
        await edit_msg(msg, "–î—É–º–∞—é..", 0)
        await sleep(random.randint(1, 3))
        try:
            if msg.is_reply: await edit_msg(msg, f"–®–∞–Ω—Å —Ç–æ–≥–æ, —á—Ç–æ {reply_text} - {chance}%", 0)
            else: await edit_msg(msg, f"–®–∞–Ω—Å —Ç–æ–≥–æ, —á—Ç–æ {text[1]} - {chance}%", 0)
        except:
            await error(msg, "–û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏\n[.—à–∞–Ω—Å (—Ç–µ–∫—Å—Ç/–æ—Ç–≤–µ—Ç)]")

async def random_yes_or_no_command(msg):
    text = msg.text.split(" ", maxsplit=1)
    if text[0] == ".–¥–∞–Ω–µ—Ç":
        reply_text = await msg.get_reply_message().text
        yes_or_no = random.randint(1, 2)
        await edit_msg(msg, "–î—É–º–∞—é..", 0)
        await sleep(random.randint(1, 3))
        try:
            if yes_or_no == 1:
                if msg.is_reply: await edit_msg(msg, f"–î–∞, {reply_text}", 0)
                else: await edit_msg(msg, f"–î–∞, {text[1]}", 0)
            else:
                if msg.is_reply: await edit_msg(msg, f"–ù–µ—Ç, {reply_text}", 0)
                else: await edit_msg(msg, f"–ù–µ—Ç, {text[1]}", 0)
        except:
            await error(msg, "–û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏\n[.–¥–∞–Ω–µ—Ç (—Ç–µ–∫—Å—Ç/–æ—Ç–≤–µ—Ç)]")